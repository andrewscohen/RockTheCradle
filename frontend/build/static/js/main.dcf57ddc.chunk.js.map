{"version":3,"sources":["store/csrf.js","store/session.js","components/LoginFormPage/index.js","components/SignupFormPage/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","store/index.js","App.js","index.js"],"names":["fetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","res","contentType","includes","json","data","status","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","sessionReducer","state","action","addUserState","Object","assign","removeUserState","LoginFormPage","dispatch","useDispatch","sessionUser","useSelector","session","useState","credential","setCredential","password","setPassword","errors","setErrors","to","onSubmit","e","preventDefault","body","JSON","stringify","catch","map","error","idx","value","onChange","target","required","SignupFormPage","username","setUsername","email","setEmail","confirmPassword","setConfirmPassword","event","ProfileButton","showMenu","setShowMenu","useEffect","closeMenu","document","addEventListener","removeEventListener","onClick","className","Navigation","enhancer","sessionLinks","isLoaded","exact","App","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dcf57ddc.chunk.js","sourcesContent":["// frontend/src/store/csrf.js\nimport Cookies from 'js-cookie';\n\n// call this to get the \"XSRF-TOKEN\" cookie, should only be used in development\nexport function restoreCSRF() {\n    return fetch('/api/csrf/restore');\n}\n\nexport async function fetch(url, options = {}) {\n    // set options.method to 'GET' if there is no method\n    options.method = options.method || 'GET';\n    // set options.headers to an empty object if there is no headers\n    options.headers = options.headers || {};\n\n    // if the options.method is not 'GET', then set the \"Content-Type\" header to\n    // \"application/json\", and set the \"XSRF-TOKEN\" header to the value of the\n    // \"XSRF-TOKEN\" cookie\n    if (options.method.toUpperCase() !== \"GET\") {\n        if (options.headers[\"Content-Type\"] === \"multipart/form-data\") {\n            delete options.headers[\"Content-Type\"];\n        } else {\n            options.headers[\"Content-Type\"] =\n                options.headers[\"Content-Type\"] || \"application/json\";\n        }\n        options.headers[\"XSRF-Token\"] = Cookies.get(\"XSRF-TOKEN\");\n    }\n    // call the default window's fetch with the url and the options passed in\n    const res = await window.fetch(url, options);\n\n    // if the response's body is JSON, then parse the JSON body and set it to a\n    // key of `data` on the response\n    const contentType = res.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n        const data = await res.json();\n        res.data = data;\n    }\n\n    // if the response status code is 400 or above, then throw an error with the\n    // error being the response\n    if (res.status >= 400) throw res;\n\n    // if the response status code is under 400, then return the response to the\n    // next promise chain\n    return res;\n}\n","import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\n// LOGIN ACTION\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const res = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(res.data.user));\n    return res;\n};\n\n// RESTOREUSER ACTION\nexport const restoreUser = () => async dispatch => {\n    const res = await fetch('/api/session');\n    dispatch(setUser(res.data.user));\n    return res;\n};\n\n// SIGNUP ACTION\nexport const signup = (user) => async (dispatch) => {\n    const { username, email, password } = user;\n    const res = await fetch(\"/api/users\", {\n        method: 'POST',\n        body: JSON.stringify({\n            username,\n            email,\n            password,\n        }),\n    });\n    dispatch(setUser(res.data.user));\n    return res;\n};\n\n// AWS\nexport const createUser = (user) => async (dispatch) => {\n    const { images, image, username, email, password } = user;\n    const formData = new FormData();\n    formData.append(\"username\", username);\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n\n    // for multiple files\n    if (images && images.length !== 0) {\n        for (var i = 0; i < images.length; i++) {\n            formData.append(\"images\", images[i]);\n        }\n    }\n\n    // for single file\n    if (image) formData.append(\"image\", image);\n\n    const res = await fetch(`/api/users/`, {\n        method: \"POST\",\n        body: formData,\n    });\n\n    dispatch(setUser(res.data.user));\n};\n\n// LOGOUT ACTION\nexport const logout = () => async (dispatch) => {\n    const res = await fetch('/api/session', {\n        method: 'DELETE',\n    });\n    dispatch(removeUser());\n    return res;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER:\n            const addUserState = Object.assign({}, { user: action.payload });\n            return addUserState;\n        case REMOVE_USER:\n            const removeUserState = Object.assign({}, { user: null });\n            return removeUserState;\n        default:\n            return state;\n    }\n};\n\n// To be added\n// switch (action.type) {\n//     case SET_USER:\n//       return { ...state, user: action.payload };\n\nexport default sessionReducer;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport './LoginForm.css';\n\nfunction LoginFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return (\n        <Redirect to=\"/\" />\n    );\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .catch((res) => {\n                if (res.data && res.data.errors) setErrors(res.data.errors);\n            });\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Username or Email\n        <input\n                    type=\"text\"\n                    value={credential}\n                    onChange={(e) => setCredential(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n        <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Log In</button>\n        </form>\n    );\n}\n\nexport default LoginFormPage;\n","import { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupForm.css';\n\nconst SignupFormPage = () => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Email\n        <input\n                    type=\"text\"\n                    value={email}\n                    onChange={(event) => setEmail(event.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Username\n        <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(event) => setUsername(event.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n        <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(event) => setPassword(event.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Confirm Password\n        <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(event) => setConfirmPassword(event.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Sign Up</button>\n        </form>\n    );\n}\n\nexport default SignupFormPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\n\nfunction ProfileButton({ user }) {\n    const dispatch = useDispatch();\n    const [showMenu, setShowMenu] = useState(false);\n\n    const openMenu = () => {\n        if (showMenu) return;\n        setShowMenu(true);\n    };\n\n    useEffect(() => {\n        if (!showMenu) return;\n\n        const closeMenu = () => {\n            setShowMenu(false);\n        };\n\n        document.addEventListener('click', closeMenu);\n\n        return () => document.removeEventListener(\"click\", closeMenu);\n    }, [showMenu]);\n\n    const logout = (e) => {\n        e.preventDefault();\n        dispatch(sessionActions.logout());\n    };\n\n    return (\n        <>\n            <button onClick={openMenu}>\n                <i className=\"fas fa-user-circle\" />\n            </button>\n            {showMenu && (\n                <ul className=\"profile-dropdown\">\n                    <li>{user.username}</li>\n                    <li>{user.email}</li>\n                    <li>\n                        <button onClick={logout}>Log Out</button>\n                    </li>\n                </ul>\n            )}\n        </>\n    );\n}\n\nexport default ProfileButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\n\nfunction Navigation({ isLoaded }) {\n    const sessionUser = useSelector(state => state.session.user);\n\n    let sessionLinks;\n    if (sessionUser) {\n        sessionLinks = (\n            <ProfileButton user={sessionUser} />\n        );\n    } else {\n        sessionLinks = (\n            <>\n                <NavLink to=\"/login\">\n                    Log in\n                </NavLink>\n                <p>I</p>\n                <NavLink to=\"/signup\">Sign up</NavLink>\n            </>\n        );\n    }\n    return (\n        <div>\n            <nav className=\"fixed bg-grey-600 shadow-md h-32 z-50 w-full px-5 py-2 flex justify-between items-center cursor-pointer\">\n                <NavLink exact to=\"/\" className=\"hover:underline\">Home</NavLink>\n                <NavLink to='#' className=\"hover:underline\">Clothing</NavLink>\n                <NavLink to='#' className=\"hover:underline\">Accessories</NavLink>\n                <NavLink to='#' className=\"hover:underline\">Gear</NavLink>\n                <div className=\"flex items-end space-x-3 p-1 hover:underline\">\n                    {isLoaded && sessionLinks}\n                </div>\n            </nav>\n        </div >\n\n\n    );\n}\n\nexport default Navigation;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport sessionReducer from './session';\n\nconst rootReducer = combineReducers({\n\n    session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/login\">\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.css';\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}